!    -*- f90 -*-
! Note: the context of this file is case sensitive.
python module _bufrlib ! in 
    interface  ! in :_bufrlib

function adn30(idn,l30) ! in adn30.f
    integer :: idn
    integer :: l30
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    character*(*) :: adn30
    common /hrdwrd/ nbytw,nbitw,iord
end function adn30
function isetprm(cprmnm, ipval)
    character*(*), intent(in) :: cprmnm
    integer, intent(in) :: ipval
end function isetprm
function igetprm(cprmnm)
    character*(*), intent(in) :: cprmnm
    integer, intent(out) :: igetprm
end function igetprm
subroutine atrcpt(msgin,lmsgot,msgot) ! in atrcpt.f
    integer dimension(*) :: msgin
    integer :: lmsgot
    integer dimension(*) :: msgot
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    integer :: itryr
    integer :: itrmo
    integer :: itrdy
    integer :: itrhr
    integer :: itrmi
    character*1 :: ctrt
    common /hrdwrd/ nbytw,nbitw,iord
    common /tnkrcp/ itryr,itrmo,itrdy,itrhr,itrmi,ctrt
end subroutine atrcpt
subroutine bfrini ! in bfrini.f
    integer dimension(5,2) :: idnr
    character dimension(5,2,3),intent(c) :: typs
    character dimension(5,2,1),intent(c) :: reps
    integer dimension(5) :: lens
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: msglen
    integer dimension(150000) :: msgtxt
    integer :: maxdx
    integer :: idxv
    integer dimension(10) :: nxstr
    integer dimension(10) :: ldxa
    integer dimension(10) :: ldxb
    integer dimension(10) :: ldxd
    integer dimension(10) :: ld30
    character dimension(10,56),intent(c) :: dxstr
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: lendat
    integer dimension(32) :: iolun
    integer dimension(32) :: iomsg
    integer :: junn
    integer :: jill
    integer :: jimm
    integer :: jbit
    integer :: jbyt
    integer :: jmsg
    integer :: jsub
    integer :: ksub
    integer :: jnod
    integer :: jdat
    integer dimension(32) :: jsr
    integer dimension(150000) :: jbay
    character*1 :: ccmf
    integer :: ncnem
    character dimension(450,8),intent(c) :: cnem
    integer dimension(450) :: ndc
    integer dimension(450,300) :: idcach
    integer :: itryr
    integer :: itrmo
    integer :: itrdy
    integer :: itrhr
    integer :: itrmi
    character*1 :: ctrt
    character*1 :: csmf
    integer :: iblock
    integer dimension(4) :: iordbe
    integer dimension(4) :: iordle
    integer :: iac
    integer :: maxcmb
    integer :: maxrow
    integer :: maxcol
    integer :: ncmsgs
    integer :: ncsubs
    integer :: ncbyts
    integer :: nrpl
    integer :: nmrg
    integer :: namb
    integer :: ntot
    integer :: ibct
    integer :: ipd1
    integer :: ipd2
    integer :: ipd3
    integer :: ipd4
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    integer :: lun1
    integer :: lun2
    integer :: lmtd
    character*100 :: mtdir
    common /reptab/ idnr,typs,reps,lens
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /bufrmg/ msglen,msgtxt
    common /dxtab/ maxdx,idxv,nxstr,ldxa,ldxb,ldxd,ld30,dxstr
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /dateln/ lendat
    common /stbfr/ iolun,iomsg
    common /bufrsr/ junn,jill,jimm,jbit,jbyt,jmsg,jsub,ksub,jnod,jdat,jsr,jbay
    common /msgcmp/ ccmf
    common /dscach/ ncnem,cnem,ndc,idcach
    common /tnkrcp/ itryr,itrmo,itrdy,itrhr,itrmi,ctrt
    common /msgstd/ csmf
    common /endord/ iblock,iordbe,iordle
    common /acmode/ iac
    common /maxcmp/ maxcmb,maxrow,maxcol,ncmsgs,ncsubs,ncbyts
    common /mrgcom/ nrpl,nmrg,namb,ntot
    common /padesc/ ibct,ipd1,ipd2,ipd3,ipd4
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
    common /mstinf/ lun1,lun2,lmtd,mtdir
end subroutine bfrini
subroutine blocks(mbay,mwrd) ! in blocks.f
    integer(kind=4) dimension(mwrd) :: mbay
    integer, optional,check(len(mbay)>=mwrd),depend(mbay) :: mwrd=len(mbay)
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    integer :: iblock
    integer dimension(4) :: iordbe
    integer dimension(4) :: iordle
    common /hrdwrd/ nbytw,nbitw,iord
    common /endord/ iblock,iordbe,iordle
end subroutine blocks
subroutine bort(str) ! in bort.f
    character*(*) :: str
end subroutine bort
subroutine bort2(str1,str2) ! in bort2.f
    character*(*) :: str1
    character*(*) :: str2
end subroutine bort2
subroutine bvers(cverstr) ! in bvers.f
    character*12,intent(out) :: cverstr
end subroutine bvers
subroutine cadn30(idn,adn) ! in cadn30.f
    integer :: idn
    character*(*) :: adn
end subroutine cadn30
subroutine capit(str) ! in capit.f
    character*(*) :: str
end subroutine capit
subroutine chekstab(lun) ! in chekstab.f
    integer :: lun
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine chekstab
subroutine chrtrn(str,chr,n) ! in chrtrn.f
    character*(*) :: str
    character dimension(n,1),intent(c) :: chr
    integer, optional,check(shape(chr,0)==n),depend(chr) :: n=shape(chr,0)
end subroutine chrtrn
subroutine chrtrna(str,chr,n) ! in chrtrna.f
    character*(*) :: str
    character dimension(n,1),intent(c) :: chr
    integer, optional,check(shape(chr,0)==n),depend(chr) :: n=shape(chr,0)
    integer :: iascii
    integer dimension(256) :: iatoe
    integer dimension(256) :: ietoa
    common /charac/ iascii,iatoe,ietoa
end subroutine chrtrna
subroutine cktaba(lun,subset,jdate,iret) ! in cktaba.f
    integer :: lun
    character*8 :: subset
    integer :: jdate
    integer :: iret
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: ibct
    integer :: ipd1
    integer :: ipd2
    integer :: ipd3
    integer :: ipd4
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: iprt
    integer dimension(32) :: msgunp
    integer dimension(32) :: isc3
    character dimension(32,8),intent(c) :: tamnem
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /padesc/ ibct,ipd1,ipd2,ipd3,ipd4
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /quiet/ iprt
    common /unptyp/ msgunp
    common /sc3bfr/ isc3,tamnem
end subroutine cktaba
subroutine closbf(lunit) ! in closbf.f
    integer :: lunit
    real*8 :: bmiss
    integer dimension(32) :: null
    common /bufrbmiss/ bmiss
    common /nulbfr/ null
end subroutine closbf
subroutine closmg(lunin) ! in closmg.f
    integer :: lunin
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
end subroutine closmg
subroutine cmpmsg(cf) ! in cmpmsg.f
    character*1 :: cf
    character*1 :: ccmf
    common /msgcmp/ ccmf
end subroutine cmpmsg
subroutine cmsgini(lun,mesg,subset,idate,nsub,nbyt) ! in cmsgini.f
    integer :: lun
    integer dimension(*) :: mesg
    character*8 :: subset
    integer :: idate
    integer :: nsub
    integer :: nbyt
    real*8 :: bmiss
    common /bufrbmiss/ bmiss
end subroutine cmsgini
subroutine cnved4(msgin,lmsgot,msgot) ! in cnved4.f
    integer dimension(*) :: msgin
    integer :: lmsgot
    integer dimension(*) :: msgot
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    common /hrdwrd/ nbytw,nbitw,iord
end subroutine cnved4
subroutine conwin(lun,inc1,inc2) ! in conwin.f
    integer :: lun
    integer :: inc1
    integer :: inc2
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end subroutine conwin
subroutine copybf(lunin,lunot) ! in copybf.f
    integer :: lunin
    integer :: lunot
    real*8 :: bmiss
    common /bufrbmiss/ bmiss
end subroutine copybf
subroutine copymg(lunin,lunot) ! in copymg.f
    integer :: lunin
    integer :: lunot
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end subroutine copymg
subroutine copysb(lunin,lunot,iret) ! in copysb.f
    integer :: lunin
    integer :: lunot
    integer :: iret
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end subroutine copysb
subroutine cpbfdx(lud,lun) ! in cpbfdx.f
    integer :: lud
    integer :: lun
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine cpbfdx
subroutine cpdxmm(lunit) ! in cpdxmm.f
    integer :: lunit
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    real*8 :: bmiss
    integer :: iprt
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
end subroutine cpdxmm
subroutine cpymem(lunot) ! in cpymem.f
    integer :: lunot
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end subroutine cpymem
subroutine cpyupd(lunit,lin,lun,ibyt) ! in cpyupd.f
    integer :: lunit
    integer :: lin
    integer :: lun
    integer :: ibyt
    integer :: nby0
    integer :: nby1
    integer :: nby2
    integer :: nby3
    integer :: nby4
    integer :: nby5
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    common /msgptr/ nby0,nby1,nby2,nby3,nby4,nby5
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /msgcwd/ nmsg,nsub,msub,inode,idate
end subroutine cpyupd
subroutine datebf(lunit,mear,mmon,mday,mour,idate) ! in datebf.f
    integer :: lunit
    integer :: mear
    integer :: mmon
    integer :: mday
    integer :: mour
    integer :: idate
    real*8 :: bmiss
    integer :: iprt
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
end subroutine datebf
subroutine datelen(len_bn) ! in datelen.f
    integer :: len_bn
    integer :: lendat
    common /dateln/ lendat
end subroutine datelen
function digit(str) ! in digit.f
    character*(*) :: str
    logical :: digit
end function digit
subroutine drfini(lunit,mdrf,ndrf,drftag) ! in drfini.f
    integer :: lunit
    integer dimension(ndrf) :: mdrf
    integer, optional,check(len(mdrf)>=ndrf),depend(mdrf) :: ndrf=len(mdrf)
    character*(*) :: drftag
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end subroutine drfini
subroutine drstpl(inod,lun,inv1,inv2,invn) ! in drstpl.f
    integer :: inod
    integer :: lun
    integer :: inv1
    integer :: inv2
    integer :: invn
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
end subroutine drstpl
subroutine dumpbf(lunit,jdate,jdump) ! in dumpbf.f
    integer :: lunit
    integer dimension(5) :: jdate
    integer dimension(5) :: jdump
    real*8 :: bmiss
    integer :: iprt
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
end subroutine dumpbf
subroutine dxdump(lunit,ldxot) ! in dxdump.f
    integer :: lunit
    integer :: ldxot
    integer dimension(5,2) :: idnr
    character dimension(5,2,3),intent(c) :: typs
    character dimension(5,2,1),intent(c) :: reps
    integer dimension(5) :: lens
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /reptab/ idnr,typs,reps,lens
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine dxdump
subroutine dxinit(lun,ioi) ! in dxinit.f
    integer :: lun
    integer :: ioi
    integer dimension(5,2) :: idnr
    character dimension(5,2,3),intent(c) :: typs
    character dimension(5,2,1),intent(c) :: reps
    integer dimension(5) :: lens
    real*8 :: bmiss
    integer :: ibct
    integer :: ipd1
    integer :: ipd2
    integer :: ipd3
    integer :: ipd4
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /reptab/ idnr,typs,reps,lens
    common /bufrbmiss/ bmiss
    common /padesc/ ibct,ipd1,ipd2,ipd3,ipd4
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine dxinit
subroutine dxmini(lun,mbay,mbyt,mb4,mba,mbb,mbd) ! in dxmini.f
    integer :: lun
    integer dimension(150000) :: mbay
    integer :: mbyt
    integer :: mb4
    integer :: mba
    integer :: mbb
    integer :: mbd
    real*8 :: bmiss
    integer :: maxdx
    integer :: idxv
    integer dimension(10) :: nxstr
    integer dimension(10) :: ldxa
    integer dimension(10) :: ldxb
    integer dimension(10) :: ldxd
    integer dimension(10) :: ld30
    character dimension(10,56),intent(c) :: dxstr
    common /bufrbmiss/ bmiss
    common /dxtab/ maxdx,idxv,nxstr,ldxa,ldxb,ldxd,ld30,dxstr
end subroutine dxmini
subroutine elemdx(card,lun) ! in elemdx.f
    character*80 :: card
    integer :: lun
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine elemdx
subroutine errwrt(str) ! in errwrt.f
    character*(*) :: str
end subroutine errwrt
subroutine getabdb(lunit,tabdb,itab,jtab) ! in getabdb.f
    integer :: lunit
    character dimension(*,128),intent(c) :: tabdb
    integer :: itab
    integer :: jtab
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine getabdb
function getbmiss() ! in getbmiss.f
    real*8 :: bmiss
    real*8 :: getbmiss
    common /bufrbmiss/ bmiss
end function getbmiss
subroutine getlens(mbay,ll,len0,len1,len2,len3,len4,len5) ! in getlens.f
    integer dimension(*) :: mbay
    integer :: ll
    integer :: len0
    integer :: len1
    integer :: len2
    integer :: len3
    integer :: len4
    integer :: len5
end subroutine getlens
subroutine getntbe(lunt,ifxyn,line,iret) ! in getntbe.f
    integer :: lunt
    integer :: ifxyn
    character*(*) :: line
    integer :: iret
end subroutine getntbe
subroutine gets1loc(s1mnem,iben,isbyt,iwid,iret) ! in gets1loc.f
    character*(*) :: s1mnem
    integer :: iben
    integer :: isbyt
    integer :: iwid
    integer :: iret
end subroutine gets1loc
subroutine gettagpr(lunit,tagch,ntagch,tagpr,iret) ! in gettagpr.f
    integer :: lunit
    character*(*) :: tagch
    integer :: ntagch
    character*(*) :: tagpr
    integer :: iret
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end subroutine gettagpr
subroutine gettbh(luns,lunl,tab,imt,imtv,iogce,iltv) ! in gettbh.f
    integer :: luns
    integer :: lunl
    character*1 :: tab
    integer :: imt
    integer :: imtv
    integer :: iogce
    integer :: iltv
end subroutine gettbh
function getvalnb(lunit,tagpv,ntagpv,tagnb,ntagnb) ! in getvalnb.f
    integer :: lunit
    character*(*) :: tagpv
    integer :: ntagpv
    character*(*) :: tagnb
    integer :: ntagnb
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: getvalnb
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end function getvalnb
subroutine getwin(node,lun,iwin,jwin) ! in getwin.f
    integer :: node
    integer :: lun
    integer :: iwin
    integer :: jwin
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end subroutine getwin
function i4dy(idate) ! in i4dy.f
    integer :: idate
    integer :: i4dy
end function i4dy
function ibfms(r8val) ! in ibfms.f
    real*8 :: r8val
    real*8 :: bmiss
    integer :: ibfms
    common /bufrbmiss/ bmiss
end function ibfms
function icbfms(str,lstr) ! in icbfms.f
    character*(*) :: str
    integer :: lstr
    real*8 :: bmiss
    integer :: icbfms
    common /bufrbmiss/ bmiss
end function icbfms
function ichkstr(str,chr,n) ! in ichkstr.f
    character*(*) :: str
    character dimension(n,1),intent(c) :: chr
    integer, optional,check(shape(chr,0)==n),depend(chr) :: n=shape(chr,0)
    integer :: ichkstr
end function ichkstr
function icmpdx(lud,lun) ! in icmpdx.f
    integer :: lud
    integer :: lun
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    integer :: icmpdx
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end function icmpdx
function icopysb(lunin,lunot) ! in icopysb.f
    integer :: lunin
    integer :: lunot
    integer :: icopysb
end function icopysb
function idn30(adn30,l30) ! in idn30.f
    character*(*) :: adn30
    integer :: l30
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    integer :: idn30
    common /hrdwrd/ nbytw,nbitw,iord
end function idn30
function idxmsg(mesg) ! in idxmsg.f
    integer dimension(*) :: mesg
    integer :: idxmsg
end function idxmsg
function ifbget(lunit) ! in ifbget.f
    integer :: lunit
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: ifbget
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
end function ifbget
function ifxy(adsc) ! in ifxy.f
    character*6 :: adsc
    integer :: ifxy
end function ifxy
function igetdate(mbay,iyr,imo,idy,ihr) ! in igetdate.f
    integer dimension(*) :: mbay
    integer :: iyr
    integer :: imo
    integer :: idy
    integer :: ihr
    integer :: lendat
    integer :: igetdate
    common /dateln/ lendat
end function igetdate
function igetfxy(str,cfxy) ! in igetfxy.f
    character*(*) :: str
    character*6 :: cfxy
    integer :: igetfxy
end function igetfxy
function igetntbi(lun,ctb) ! in igetntbi.f
    integer :: lun
    character*1 :: ctb
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    integer :: igetntbi
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end function igetntbi
function igetntbl(lunt,line) ! in igetntbl.f
    integer :: lunt
    character*(*) :: line
    integer :: igetntbl
end function igetntbl
function igetsc(lunit) ! in igetsc.f
    integer :: lunit
    real*8 :: bmiss
    integer dimension(32) :: iscodes
    integer :: igetsc
    common /bufrbmiss/ bmiss
    common /stcode/ iscodes
end function igetsc
function igettdi(iflag) ! in igettdi.f
    integer :: iflag
    integer :: igettdi
end function igettdi
subroutine inctab(atag,atyp,node) ! in inctab.f
    character*(*) :: atag
    character*(*) :: atyp
    integer :: node
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
end subroutine inctab
function invcon(nc,lun,inv1,inv2) ! in invcon.f
    integer :: nc
    integer :: lun
    integer :: inv1
    integer :: inv2
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    real*8 :: bmiss
    integer :: iprt
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: invcon
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
    common /usrint/ nval,inv,val
end function invcon
subroutine invmrg(lubfi,lubfj) ! in invmrg.f
    integer :: lubfi
    integer :: lubfj
    integer :: nrpl
    integer :: nmrg
    integer :: namb
    integer :: ntot
    real*8 :: bmiss
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /mrgcom/ nrpl,nmrg,namb,ntot
    common /bufrbmiss/ bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /usrint/ nval,inv,val
end subroutine invmrg
function invtag(node,lun,inv1,inv2) ! in invtag.f
    integer :: node
    integer :: lun
    integer :: inv1
    integer :: inv2
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: iprt
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: invtag
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
    common /usrint/ nval,inv,val
end function invtag
function invwin(node,lun,inv1,inv2) ! in invwin.f
    integer :: node
    integer :: lun
    integer :: inv1
    integer :: inv2
    real*8 :: bmiss
    integer :: iprt
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: invwin
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
    common /usrint/ nval,inv,val
end function invwin
function iok2cpy(lui,luo) ! in iok2cpy.f
    integer :: lui
    integer :: luo
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    integer :: iok2cpy
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end function iok2cpy
subroutine ipkm(cbay,nbyt,n) ! in ipkm.f
    character*8 :: cbay
    integer :: nbyt
    integer :: n
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    common /hrdwrd/ nbytw,nbitw,iord
end subroutine ipkm
function ipks(val,node) ! in ipks.f
    real*8 :: val
    integer :: node
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: nnrv
    integer dimension(12) :: inodnrv
    integer dimension(12) :: nrv
    character dimension(12,8),intent(c) :: tagnrv
    integer dimension(12) :: isnrv
    integer dimension(12) :: ienrv
    integer :: ibtnrv
    integer :: ipfnrv
    integer :: ipks
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /nrv203/ nnrv,inodnrv,nrv,tagnrv,isnrv,ienrv,ibtnrv,ipfnrv
end function ipks
function ireadmg(lunit,subset,idate) ! in ireadmg.f
    integer :: lunit
    character*8, intent(out) :: subset
    integer,intent(out) :: idate
    integer :: ireadmg
end function ireadmg
function ireadmm(imsg,subset,idate) ! in ireadmm.f
    integer :: imsg
    character*8 :: subset
    integer :: idate
    integer :: ireadmm
end function ireadmm
function ireadns(lunit,subset,idate) ! in ireadns.f
    integer :: lunit
    character*8 :: subset
    integer :: idate
    integer :: ireadns
end function ireadns
function ireadsb(lunit) ! in ireadsb.f
    integer :: lunit
    integer :: ireadsb
end function ireadsb
function irev(n) ! in irev.f
    integer :: n
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    integer :: irev
    common /hrdwrd/ nbytw,nbitw,iord
end function irev
function ishrdx(lud,lun) ! in ishrdx.f
    integer :: lud
    integer :: lun
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    integer :: ishrdx
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end function ishrdx
function isize(num) ! in isize.f
    integer :: num
    integer :: isize
end function isize
function istdesc(idn) ! in istdesc.f
    integer :: idn
    integer :: istdesc
end function istdesc
function iupb(mbay,nbyt,nbit) ! in iupb.f
    integer dimension(*) :: mbay
    integer :: nbyt
    integer :: nbit
    integer :: iupb
end function iupb
function iupbs01(mbay,s01mnem) ! in iupbs01.f
    integer dimension(*) :: mbay
    character*(*) :: s01mnem
    integer :: iupbs01
end function iupbs01
function iupbs3(mbay,s3mnem) ! in iupbs3.f
    integer dimension(*) :: mbay
    character*(*) :: s3mnem
    integer :: iupbs3
end function iupbs3
function iupm(cbay,nbits) ! in iupm.f
    character*8 :: cbay
    integer :: nbits
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    integer :: iupm
    common /hrdwrd/ nbytw,nbitw,iord
end function iupm
function iupvs01(lunit,s01mnem) ! in iupvs01.f
    integer :: lunit
    character*(*) :: s01mnem
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: iupvs01
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
end function iupvs01
subroutine jstchr(str,iret) ! in jstchr.f
    character*(*) :: str
    integer :: iret
end subroutine jstchr
subroutine jstnum(str,sign,iret) ! in jstnum.f
    character*(*) :: str
    character*1 :: sign
    integer :: iret
    integer :: iprt
    common /quiet/ iprt
end subroutine jstnum
function lcmgdf(lunit,subset) ! in lcmgdf.f
    integer :: lunit
    character*8 :: subset
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: lcmgdf
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
end function lcmgdf
function lmsg(sec0) ! in lmsg.f
    character*8 :: sec0
    integer :: lmsg
end function lmsg
function lstjpb(node,lun,jbtyp) ! in lstjpb.f
    integer :: node
    integer :: lun
    character*(*) :: jbtyp
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    integer :: lstjpb
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end function lstjpb
subroutine makestab ! in makestab.f
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    integer dimension(32) :: iolun
    integer dimension(32) :: iomsg
    integer :: iprt
    integer :: nnrv
    integer dimension(12) :: inodnrv
    integer dimension(12) :: nrv
    character dimension(12,8),intent(c) :: tagnrv
    integer dimension(12) :: isnrv
    integer dimension(12) :: ienrv
    integer :: ibtnrv
    integer :: ipfnrv
    integer dimension(32) :: lus
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
    common /stbfr/ iolun,iomsg
    common /quiet/ iprt
    common /nrv203/ nnrv,inodnrv,nrv,tagnrv,isnrv,ienrv,ibtnrv,ipfnrv
    common /lushr/ lus
    common /usrint/ nval,inv,val
end subroutine makestab
subroutine maxout(maxo) ! in maxout.f
    integer :: maxo
    integer :: maxcmb
    integer :: maxrow
    integer :: maxcol
    integer :: ncmsgs
    integer :: ncsubs
    integer :: ncbyts
    real*8 :: bmiss
    integer :: maxdx
    integer :: idxv
    integer dimension(10) :: nxstr
    integer dimension(10) :: ldxa
    integer dimension(10) :: ldxb
    integer dimension(10) :: ldxd
    integer dimension(10) :: ld30
    character dimension(10,56),intent(c) :: dxstr
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: iprt
    common /maxcmp/ maxcmb,maxrow,maxcol,ncmsgs,ncsubs,ncbyts
    common /bufrbmiss/ bmiss
    common /dxtab/ maxdx,idxv,nxstr,ldxa,ldxb,ldxd,ld30,dxstr
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /quiet/ iprt
end subroutine maxout
subroutine mesgbc(lunin,mesgtyp,icomp) ! in mesgbc.f
    integer :: lunin
    integer :: mesgtyp
    integer :: icomp
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
end subroutine mesgbc
subroutine mesgbf(lunit,mesgtyp) ! in mesgbf.f
    integer :: lunit
    integer :: mesgtyp
    real*8 :: bmiss
    common /bufrbmiss/ bmiss
end subroutine mesgbf
subroutine minimg(lunit,mini) ! in minimg.f
    integer :: lunit
    integer :: mini
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
end subroutine minimg
subroutine mrginv ! in mrginv.f
    integer :: nrpl
    integer :: nmrg
    integer :: namb
    integer :: ntot
    integer :: iprt
    common /mrgcom/ nrpl,nmrg,namb,ntot
    common /quiet/ iprt
end subroutine mrginv
function msgfull(msiz,itoadd,mxsiz) ! in msgfull.f
    integer :: msiz
    integer :: itoadd
    integer :: mxsiz
    real*8 :: bmiss
    character*1 :: csmf
    integer :: itryr
    integer :: itrmo
    integer :: itrdy
    integer :: itrhr
    integer :: itrmi
    character*1 :: ctrt
    logical :: msgfull
    common /bufrbmiss/ bmiss
    common /msgstd/ csmf
    common /tnkrcp/ itryr,itrmo,itrdy,itrhr,itrmi,ctrt
end function msgfull
subroutine msgini(lun) ! in msgini.f
    integer :: lun
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer dimension(32) :: luncpy
    integer :: nby0
    integer :: nby1
    integer :: nby2
    integer :: nby3
    integer :: nby4
    integer :: nby5
    integer :: ibct
    integer :: ipd1
    integer :: ipd2
    integer :: ipd3
    integer :: ipd4
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /ufbcpl/ luncpy
    common /msgptr/ nby0,nby1,nby2,nby3,nby4,nby5
    common /padesc/ ibct,ipd1,ipd2,ipd3,ipd4
end subroutine msgini
subroutine msgupd(lunit,lun) ! in msgupd.f
    integer :: lunit
    integer :: lun
    integer :: nby0
    integer :: nby1
    integer :: nby2
    integer :: nby3
    integer :: nby4
    integer :: nby5
    real*8 :: bmiss
    integer :: iprt
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    common /msgptr/ nby0,nby1,nby2,nby3,nby4,nby5
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /msgcwd/ nmsg,nsub,msub,inode,idate
end subroutine msgupd
subroutine msgwrt(lunit,mesg,mgbyt) ! in msgwrt.f
    integer :: lunit
    integer dimension(*) :: mesg
    integer :: mgbyt
    integer :: msglen
    integer dimension(150000) :: msgtxt
    real*8 :: bmiss
    integer dimension(32) :: null
    integer :: iprt
    integer :: itryr
    integer :: itrmo
    integer :: itrdy
    integer :: itrhr
    integer :: itrmi
    character*1 :: ctrt
    character*1 :: csmf
    integer :: ns01v
    character dimension(10,8),intent(c) :: cmnem
    integer dimension(10) :: ivmnem
    common /bufrmg/ msglen,msgtxt
    common /bufrbmiss/ bmiss
    common /nulbfr/ null
    common /quiet/ iprt
    common /tnkrcp/ itryr,itrmo,itrdy,itrhr,itrmi,ctrt
    common /msgstd/ csmf
    common /s01cm/ ns01v,cmnem,ivmnem
end subroutine msgwrt
subroutine mtinfo(cmtdir,lunmt1,lunmt2) ! in mtinfo.f
    character*(*) :: cmtdir
    integer :: lunmt1
    integer :: lunmt2
    integer :: lun1
    integer :: lun2
    integer :: lmtd
    character*100 :: mtdir
    common /mstinf/ lun1,lun2,lmtd,mtdir
end subroutine mtinfo
subroutine mvb(ib1,nb1,ib2,nb2,nbm) ! in mvb.f
    integer dimension(*) :: ib1
    integer :: nb1
    integer dimension(*) :: ib2
    integer :: nb2
    integer :: nbm
    real*8 :: bmiss
    common /bufrbmiss/ bmiss
end subroutine mvb
function nemock(nemo) ! in nemock.f
    character*(*) :: nemo
    integer :: nemock
end function nemock
subroutine nemtab(lun,nemo,idn,tab,iret) ! in nemtab.f
    integer :: lun
    character*(*) :: nemo
    integer :: idn
    character*1 :: tab
    integer :: iret
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine nemtab
subroutine nemtba(lun,nemo,mtyp,msbt,inod) ! in nemtba.f
    integer :: lun
    character*(*) :: nemo
    integer :: mtyp
    integer :: msbt
    integer :: inod
    real*8 :: bmiss
    common /bufrbmiss/ bmiss
end subroutine nemtba
subroutine nemtbax(lun,nemo,mtyp,msbt,inod) ! in nemtbax.f
    integer :: lun
    character*(*) :: nemo
    integer :: mtyp
    integer :: msbt
    integer :: inod
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine nemtbax
subroutine nemtbb(lun,itab,unit,iscl,iref,ibit) ! in nemtbb.f
    integer :: lun
    integer :: itab
    character*24 :: unit
    integer :: iscl
    integer :: iref
    integer :: ibit
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine nemtbb
subroutine nemtbd(lun,itab,nseq,nems,irps,knts) ! in nemtbd.f
    integer :: lun
    integer :: itab
    integer :: nseq
    character dimension(250,8),intent(c) :: nems
    integer dimension(250) :: irps
    integer dimension(250) :: knts
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine nemtbd
subroutine nenubd(nemo,numb,lun) ! in nenubd.f
    character*8 :: nemo
    character*6 :: numb
    integer :: lun
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine nenubd
function nevn(node,lun,inv1,inv2,i1,i2,i3,usr) ! in nevn.f
    integer :: node
    integer :: lun
    integer :: inv1
    integer :: inv2
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer, optional,check(shape(usr,2)==i3),depend(usr) :: i3=shape(usr,2)
    real*8 dimension(i1,i2,i3) :: usr
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: nevn
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end function nevn
subroutine newwin(lun,iwin,jwin) ! in newwin.f
    integer :: lun
    integer :: iwin
    integer :: jwin
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end subroutine newwin
function nmsub(lunit) ! in nmsub.f
    integer :: lunit
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: nmsub
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
end function nmsub
function nmwrd(mbay) ! in nmwrd.f
    integer dimension(*) :: mbay
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    integer :: nmwrd
    common /hrdwrd/ nbytw,nbitw,iord
end function nmwrd
function numbck(numb) ! in numbck.f
    character*6 :: numb
    integer :: numbck
end function numbck
subroutine numtab(lun,idn,nemo,tab,iret) ! in numtab.f
    integer :: lun
    integer :: idn
    character*(*) :: nemo
    character*1 :: tab
    integer :: iret
    integer dimension(5,2) :: idnr
    character dimension(5,2,3),intent(c) :: typs
    character dimension(5,2,1),intent(c) :: reps
    integer dimension(5) :: lens
    real*8 :: bmiss
    common /reptab/ idnr,typs,reps,lens
    common /bufrbmiss/ bmiss
end subroutine numtab
subroutine numtbd(lun,idn,nemo,tab,iret) ! in numtbd.f
    integer :: lun
    integer :: idn
    character*(*) :: nemo
    character*1 :: tab
    integer :: iret
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine numtbd
function nvnwin(node,lun,inv1,inv2,invn,nmax) ! in nvnwin.f
    integer :: node
    integer :: lun
    integer :: inv1
    integer :: inv2
    integer dimension(nmax) :: invn
    integer, optional,check(len(invn)>=nmax),depend(invn) :: nmax=len(invn)
    real*8 :: bmiss
    integer :: iprt
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: nvnwin
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
    common /usrint/ nval,inv,val
end function nvnwin
function nwords(n,lun) ! in nwords.f
    integer :: n
    integer :: lun
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: nwords
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end function nwords
subroutine nxtwin(lun,iwin,jwin) ! in nxtwin.f
    integer :: lun
    integer :: iwin
    integer :: jwin
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end subroutine nxtwin
subroutine openbf(lunit,io,lundx) ! in openbf.f
    integer :: lunit
    character*(*) :: io
    integer :: lundx
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(32) :: iscodes
    integer dimension(32) :: null
    integer dimension(32) :: iolun
    integer dimension(32) :: iomsg
    integer :: iprt
    integer dimension(32) :: lus
    integer dimension(32) :: isc3
    character dimension(32,8),intent(c) :: tamnem
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /stcode/ iscodes
    common /nulbfr/ null
    common /stbfr/ iolun,iomsg
    common /quiet/ iprt
    common /lushr/ lus
    common /sc3bfr/ isc3,tamnem
end subroutine openbf
subroutine openbt(lundx,mtyp) ! in openbt.f
    integer :: lundx
    integer :: mtyp
    integer :: iprt
    common /quiet/ iprt
end subroutine openbt
subroutine openmb(lunit,subset,jdate) ! in openmb.f
    integer :: lunit
    character*(*) :: subset
    integer :: jdate
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
end subroutine openmb
subroutine openmg(lunit,subset,jdate) ! in openmg.f
    integer :: lunit
    character*(*) :: subset
    integer :: jdate
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
end subroutine openmg
subroutine pad(ibay,ibit,ibyt,ipadb) ! in pad.f
    integer dimension(*) :: ibay
    integer :: ibit
    integer :: ibyt
    integer :: ipadb
end subroutine pad
subroutine padmsg(mesg,lmesg,npbyt) ! in padmsg.f
    integer dimension(*) :: mesg
    integer :: lmesg
    integer :: npbyt
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    common /hrdwrd/ nbytw,nbitw,iord
end subroutine padmsg
subroutine parstr(str,tags,mtag,ntag,sep,limit80) ! in parstr.f
    character*(*) :: str
    character dimension(mtag,(*)),intent(c) :: tags
    integer, optional,check(shape(tags,0)==mtag),depend(tags) :: mtag=shape(tags,0)
    integer :: ntag
    character*1 :: sep
    logical :: limit80
end subroutine parstr
subroutine parusr(str,lun,i1,io) ! in parusr.f
    character*(*) :: str
    integer :: lun
    integer :: i1
    integer :: io
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    integer :: iac
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /acmode/ iac
end subroutine parusr
subroutine parutg(lun,io,utg,nod,kon,val) ! in parutg.f
    integer :: lun
    integer :: io
    character*(*) :: utg
    integer :: nod
    integer :: kon
    real :: val
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    logical :: picky
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /utgprm/ picky
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end subroutine parutg
subroutine pkb(nval,nbits,ibay,ibit) ! in pkb.f
    integer :: nval
    integer :: nbits
    integer dimension(*) :: ibay
    integer :: ibit
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    common /hrdwrd/ nbytw,nbitw,iord
end subroutine pkb
subroutine pkbs1(ival,mbay,s1mnem) ! in pkbs1.f
    integer :: ival
    integer dimension(*) :: mbay
    character*(*) :: s1mnem
end subroutine pkbs1
subroutine pkc(chr,nchr,ibay,ibit) ! in pkc.f
    character*(*) :: chr
    integer :: nchr
    integer dimension(*) :: ibay
    integer :: ibit
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    integer :: iascii
    integer dimension(256) :: iatoe
    integer dimension(256) :: ietoa
    common /hrdwrd/ nbytw,nbitw,iord
    common /charac/ iascii,iatoe,ietoa
end subroutine pkc
function pkftbv(nbits,ibit) ! in pkftbv.f
    integer :: nbits
    integer :: ibit
    real*8 :: bmiss
    real*8 :: pkftbv
    common /bufrbmiss/ bmiss
end function pkftbv
subroutine pktdd(id,lun,idn,iret) ! in pktdd.f
    integer :: id
    integer :: lun
    integer :: idn
    integer :: iret
    real*8 :: bmiss
    integer :: maxdx
    integer :: idxv
    integer dimension(10) :: nxstr
    integer dimension(10) :: ldxa
    integer dimension(10) :: ldxb
    integer dimension(10) :: ldxd
    integer dimension(10) :: ld30
    character dimension(10,56),intent(c) :: dxstr
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    integer :: iprt
    common /bufrbmiss/ bmiss
    common /dxtab/ maxdx,idxv,nxstr,ldxa,ldxb,ldxd,ld30,dxstr
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
    common /quiet/ iprt
end subroutine pktdd
subroutine pkvs01(s01mnem,ival) ! in pkvs01.f
    character*(*) :: s01mnem
    integer :: ival
    real*8 :: bmiss
    integer :: ns01v
    character dimension(10,8),intent(c) :: cmnem
    integer dimension(10) :: ivmnem
    common /bufrbmiss/ bmiss
    common /s01cm/ ns01v,cmnem,ivmnem
end subroutine pkvs01
subroutine posapx(lunxx) ! in posapx.f
    integer :: lunxx
    real*8 :: bmiss
    common /bufrbmiss/ bmiss
end subroutine posapx
subroutine rcstpl(lun) ! in rcstpl.f
    integer :: lun
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    integer dimension(80000) :: nbit
    integer dimension(80000) :: mbit
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer dimension(96000,100) :: itmp
    real*8 dimension(96000,100) :: vtmp
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /usrbit/ nbit,mbit
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /usrtmp/ itmp,vtmp
    common /usrint/ nval,inv,val
end subroutine rcstpl
subroutine rdbfdx(lunit,lun) ! in rdbfdx.f
    integer :: lunit
    integer :: lun
    real*8 :: bmiss
    integer :: iprt
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
end subroutine rdbfdx
subroutine rdcmps(lun) ! in rdcmps.f
    integer :: lun
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: nrst
    integer dimension(50) :: irnch
    integer dimension(50) :: irbit
    character dimension(50,10),intent(c) :: crtag
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /rlccmn/ nrst,irnch,irbit,crtag
    common /usrint/ nval,inv,val
end subroutine rdcmps
subroutine rdmemm(imsg,subset,jdate,iret) ! in rdmemm.f
    integer :: imsg
    character*8 :: subset
    integer :: jdate
    integer :: iret
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: iprt
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /quiet/ iprt
end subroutine rdmemm
subroutine rdmems(isub,iret) ! in rdmems.f
    integer :: isub
    integer :: iret
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: iprt
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    integer dimension(32) :: msgunp
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /quiet/ iprt
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /unptyp/ msgunp
end subroutine rdmems
subroutine rdmgsb(lunit,imsg,isub) ! in rdmgsb.f
    integer :: lunit
    integer :: imsg
    integer :: isub
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
end subroutine rdmgsb
subroutine rdmsgw(lunit,mesg,iret) ! in rdmsgw.f
    integer :: lunit
    integer dimension(*) :: mesg
    integer :: iret
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    real*8 :: bmiss
    common /hrdwrd/ nbytw,nbitw,iord
    common /bufrbmiss/ bmiss
end subroutine rdmsgw
subroutine rdmtbb(lunstb,lunltb,mxmtbb,imt,imtv,iogce,iltv,nmtbb,imfxyn,cmscl,cmsref,cmbw,cmunit,cmmnem,cmdsc,cmelem) ! in rdmtbb.f
    integer :: lunstb
    integer :: lunltb
    integer :: mxmtbb
    integer :: imt
    integer :: imtv
    integer :: iogce
    integer :: iltv
    integer :: nmtbb
    integer dimension(*) :: imfxyn
    character dimension(*,4),intent(c) :: cmscl
    character dimension(*,12),intent(c) :: cmsref
    character dimension(*,4),intent(c) :: cmbw
    character dimension(*,14),intent(c) :: cmunit
    character dimension(*,8),intent(c) :: cmmnem
    character dimension(*,4),intent(c) :: cmdsc
    character dimension(*,120),intent(c) :: cmelem
end subroutine rdmtbb
subroutine rdmtbd(lunstd,lunltd,mxmtbd,mxelem,imt,imtv,iogce,iltv,nmtbd,imfxyn,cmmnem,cmdsc,cmseq,nmelem,iefxyn,ceelem) ! in rdmtbd.f
    integer :: lunstd
    integer :: lunltd
    integer, optional,check(shape(iefxyn,0)==mxmtbd),depend(iefxyn) :: mxmtbd=shape(iefxyn,0)
    integer, optional,check(shape(iefxyn,1)==mxelem),depend(iefxyn) :: mxelem=shape(iefxyn,1)
    integer :: imt
    integer :: imtv
    integer :: iogce
    integer :: iltv
    integer :: nmtbd
    integer dimension(*) :: imfxyn
    character dimension(*,8),intent(c) :: cmmnem
    character dimension(*,4),intent(c) :: cmdsc
    character dimension(*,120),intent(c) :: cmseq
    integer dimension(*) :: nmelem
    integer dimension(mxmtbd,mxelem) :: iefxyn
    character dimension(mxmtbd,mxelem,120),intent(c),depend(mxmtbd,mxelem) :: ceelem
end subroutine rdmtbd
subroutine rdtree(lun) ! in rdtree.f
    integer :: lun
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer dimension(80000) :: nbit
    integer dimension(80000) :: mbit
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /usrbit/ nbit,mbit
    common /usrint/ nval,inv,val
end subroutine rdtree
subroutine rdusdx(lundx,lun) ! in rdusdx.f
    integer :: lundx
    integer :: lun
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine rdusdx
subroutine readdx(lunit,lun,lundx) ! in readdx.f
    integer :: lunit
    integer :: lun
    integer :: lundx
    integer :: iprt
    common /quiet/ iprt
end subroutine readdx
subroutine readerme(mesg,lunit,subset,jdate,iret) ! in readerme.f
    integer dimension(*) :: mesg
    integer :: lunit
    character*8 :: subset
    integer :: jdate
    integer :: iret
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    real*8 :: bmiss
    integer :: iprt
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer dimension(32) :: isc3
    character dimension(32,8),intent(c) :: tamnem
    common /hrdwrd/ nbytw,nbitw,iord
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /sc3bfr/ isc3,tamnem
end subroutine readerme
subroutine readlc(lunit,chr,str) ! in readlc.f
    integer :: lunit
    character*(*) :: chr
    character*(*) :: str
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer dimension(80000) :: nbit
    integer dimension(80000) :: mbit
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: nrst
    integer dimension(50) :: irnch
    integer dimension(50) :: irbit
    character dimension(50,10),intent(c) :: crtag
    integer :: iprt
    integer dimension(32) :: msgunp
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /usrbit/ nbit,mbit
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /rlccmn/ nrst,irnch,irbit,crtag
    common /quiet/ iprt
    common /unptyp/ msgunp
    common /usrint/ nval,inv,val
end subroutine readlc
subroutine readmg(lunxx,subset,jdate,iret) ! in readmg.f
    integer :: lunxx
    character*8, intent(out) :: subset
    integer,intent(out) :: jdate
    integer,intent(out) :: iret
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: iprt
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer dimension(32) :: isc3
    character dimension(32,8),intent(c) :: tamnem
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /sc3bfr/ isc3,tamnem
end subroutine readmg
subroutine readmm(imsg,subset,jdate,iret) ! in readmm.f
    integer :: imsg
    character*8 :: subset
    integer :: jdate
    integer :: iret
end subroutine readmm
subroutine readns(lunit,subset,jdate,iret) ! in readns.f
    integer :: lunit
    character*8 :: subset
    integer :: jdate
    integer :: iret
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end subroutine readns
subroutine reads3(lun) ! in reads3.f
    integer :: lun
    integer :: ncnem
    character dimension(450,8),intent(c) :: cnem
    integer dimension(450) :: ndc
    integer dimension(450,300) :: idcach
    real*8 :: bmiss
    integer :: iprt
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer dimension(32) :: isc3
    character dimension(32,8),intent(c) :: tamnem
    integer :: irdmt
    common /dscach/ ncnem,cnem,ndc,idcach
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /sc3bfr/ isc3,tamnem,irdmt
end subroutine reads3
subroutine readsb(lunit,iret) ! in readsb.f
    integer :: lunit
    integer :: iret
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(32) :: msgunp
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /unptyp/ msgunp
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
end subroutine readsb
subroutine rewnbf(lunit,isr) ! in rewnbf.f
    integer,intent(in) :: lunit
    integer,intent(in) :: isr
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: junn
    integer :: jill
    integer :: jimm
    integer :: jbit
    integer :: jbyt
    integer :: jmsg
    integer :: jsub
    integer :: ksub
    integer :: jnod
    integer :: jdat
    integer dimension(32) :: jsr
    integer dimension(150000) :: jbay
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /bufrsr/ junn,jill,jimm,jbit,jbyt,jmsg,jsub,ksub,jnod,jdat,jsr,jbay
end subroutine rewnbf
function rjust(str) ! in rjust.f
    character*(*) :: str
    real :: rjust
end function rjust
subroutine rsvfvm(nem1,nem2) ! in rsvfvm.f
    character*8 :: nem1
    character*8 :: nem2
end subroutine rsvfvm
subroutine rtrcpt(lunit,iyr,imo,idy,ihr,imi,iret) ! in rtrcpt.f
    integer,intent(in) :: lunit
    integer,intent(out) :: iyr,imo,idy,ihr,imi,iret
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
end subroutine rtrcpt
subroutine seqsdx(card,lun) ! in seqsdx.f
    character*80 :: card
    integer :: lun
    integer dimension(5,2) :: idnr
    character dimension(5,2,3),intent(c) :: typs
    character dimension(5,2,1),intent(c) :: reps
    integer dimension(5) :: lens
    common /reptab/ idnr,typs,reps,lens
end subroutine seqsdx
subroutine setblock(iblk) ! in setblock.f
    integer :: iblk
    integer :: iblock
    integer dimension(4) :: iordbe
    integer dimension(4) :: iordle
    common /endord/ iblock,iordbe,iordle
end subroutine setblock
subroutine setbmiss(xmiss) ! in setbmiss.f
    real*8 :: xmiss
    real*8 :: bmiss
    common /bufrbmiss/ bmiss
end subroutine setbmiss
subroutine sntbbe(ifxyn,line,mxmtbb,nmtbb,imfxyn,cmscl,cmsref,cmbw,cmunit,cmmnem,cmdsc,cmelem) ! in sntbbe.f
    integer :: ifxyn
    character*(*) :: line
    integer :: mxmtbb
    integer :: nmtbb
    integer dimension(*) :: imfxyn
    character dimension(*,4),intent(c) :: cmscl
    character dimension(*,12),intent(c) :: cmsref
    character dimension(*,4),intent(c) :: cmbw
    character dimension(*,14),intent(c) :: cmunit
    character dimension(*,8),intent(c) :: cmmnem
    character dimension(*,4),intent(c) :: cmdsc
    character dimension(*,120),intent(c) :: cmelem
end subroutine sntbbe
subroutine sntbde(lunt,ifxyn,line,mxmtbd,mxelem,nmtbd,imfxyn,cmmnem,cmdsc,cmseq,nmelem,iefxyn,ceelem) ! in sntbde.f
    integer :: lunt
    integer :: ifxyn
    character*(*) :: line
    integer, optional,check(shape(iefxyn,0)==mxmtbd),depend(iefxyn) :: mxmtbd=shape(iefxyn,0)
    integer, optional,check(shape(iefxyn,1)==mxelem),depend(iefxyn) :: mxelem=shape(iefxyn,1)
    integer :: nmtbd
    integer dimension(*) :: imfxyn
    character dimension(*,8),intent(c) :: cmmnem
    character dimension(*,4),intent(c) :: cmdsc
    character dimension(*,120),intent(c) :: cmseq
    integer dimension(*) :: nmelem
    integer dimension(mxmtbd,mxelem) :: iefxyn
    character dimension(mxmtbd,mxelem,120),intent(c),depend(mxmtbd,mxelem) :: ceelem
end subroutine sntbde
subroutine status(lunit,lun,il,im) ! in status.f
    integer :: lunit
    integer :: lun
    integer :: il
    integer :: im
    real*8 :: bmiss
    integer dimension(32) :: iolun
    integer dimension(32) :: iomsg
    common /bufrbmiss/ bmiss
    common /stbfr/ iolun,iomsg
end subroutine status
subroutine stbfdx(lun,mesg) ! in stbfdx.f
    integer :: lun
    integer dimension(*) :: mesg
    real*8 :: bmiss
    integer :: maxdx
    integer :: idxv
    integer dimension(10) :: nxstr
    integer dimension(10) :: ldxa
    integer dimension(10) :: ldxb
    integer dimension(10) :: ldxd
    integer dimension(10) :: ld30
    character dimension(10,56),intent(c) :: dxstr
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /dxtab/ maxdx,idxv,nxstr,ldxa,ldxb,ldxd,ld30,dxstr
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine stbfdx
subroutine stdmsg(cf) ! in stdmsg.f
    character*1 :: cf
    character*1 :: csmf
    common /msgstd/ csmf
end subroutine stdmsg
subroutine stndrd(lunit,msgin,lmsgot,msgot) ! in stndrd.f
    integer :: lunit
    integer dimension(*) :: msgin
    integer :: lmsgot
    integer dimension(*) :: msgot
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    real*8 :: bmiss
    common /hrdwrd/ nbytw,nbitw,iord
    common /bufrbmiss/ bmiss
end subroutine stndrd
subroutine stntbi(n,lun,numb,nemo,celsq) ! in stntbi.f
    integer :: n
    integer :: lun
    character*(*) :: numb
    character*(*) :: nemo
    character*(*) :: celsq
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine stntbi
subroutine stntbia(n,lun,numb,nemo,celsq) ! in stntbia.f
    integer :: n
    integer :: lun
    character*(*) :: numb
    character*(*) :: nemo
    character*(*) :: celsq
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine stntbia
subroutine strcln ! in strcln.f
    real*8 :: bmiss
    integer :: mstr
    integer :: nstr
    integer :: lstr
    integer dimension(1000,2) :: luns
    character dimension(1000,80),intent(c) :: usrs
    integer dimension(52,1000) :: icon
    common /bufrbmiss/ bmiss
    common /stcach/ mstr,nstr,lstr,luns,usrs,icon
end subroutine strcln
subroutine strcpt(cf,iyr,imo,idy,ihr,imi) ! in strcpt.f
    character*1 :: cf
    integer :: iyr
    integer :: imo
    integer :: idy
    integer :: ihr
    integer :: imi
    integer :: itryr
    integer :: itrmo
    integer :: itrdy
    integer :: itrhr
    integer :: itrmi
    character*1 :: ctrt
    common /tnkrcp/ itryr,itrmo,itrdy,itrhr,itrmi,ctrt
end subroutine strcpt
subroutine strnum(str,num) ! in strnum.f
    character*(*) :: str
    integer :: num
    integer :: iprt
    common /quiet/ iprt
end subroutine strnum
subroutine strsuc(str1,str2,lens) ! in strsuc.f
    character*(*) :: str1
    character*(*) :: str2
    integer :: lens
    integer :: iprt
    common /quiet/ iprt
end subroutine strsuc
subroutine tabent(lun,nemo,tab,itab,irep,iknt,jum0) ! in tabent.f
    integer :: lun
    character*8 :: nemo
    character*1 :: tab
    integer :: itab
    integer :: irep
    integer :: iknt
    integer :: jum0
    integer dimension(5,2) :: idnr
    character dimension(5,2,3),intent(c) :: typs
    character dimension(5,2,1),intent(c) :: reps
    integer dimension(5) :: lens
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: nnrv
    integer dimension(12) :: inodnrv
    integer dimension(12) :: nrv
    character dimension(12,8),intent(c) :: tagnrv
    integer dimension(12) :: isnrv
    integer dimension(12) :: ienrv
    integer :: ibtnrv
    integer :: ipfnrv
    integer :: icdw
    integer :: icsc
    integer :: icrv
    integer :: incw
    common /reptab/ idnr,typs,reps,lens
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /nrv203/ nnrv,inodnrv,nrv,tagnrv,isnrv,ienrv,ibtnrv,ipfnrv
    common /tabccc/ icdw,icsc,icrv,incw
end subroutine tabent
subroutine tabsub(lun,nemo) ! in tabsub.f
    integer :: lun
    character*8 :: nemo
    integer :: icdw
    integer :: icsc
    integer :: icrv
    integer :: incw
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: nnrv
    integer dimension(12) :: inodnrv
    integer dimension(12) :: nrv
    character dimension(12,8),intent(c) :: tagnrv
    integer dimension(12) :: isnrv
    integer dimension(12) :: ienrv
    integer :: ibtnrv
    integer :: ipfnrv
    common /tabccc/ icdw,icsc,icrv,incw
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /nrv203/ nnrv,inodnrv,nrv,tagnrv,isnrv,ienrv,ibtnrv,ipfnrv
end subroutine tabsub
subroutine trybump(lunit,lun,usr,i1,i2,io,iret) ! in trybump.f
    integer :: lunit
    integer :: lun
    real*8 dimension(i1,i2) :: usr
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer :: io
    integer :: iret
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end subroutine trybump
subroutine ufbcnt(lunit,kmsg,ksub) ! in ufbcnt.f
    integer :: lunit
    integer :: kmsg
    integer :: ksub
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
end subroutine ufbcnt
subroutine ufbcpy(lubin,lubot) ! in ufbcpy.f
    integer :: lubin
    integer :: lubot
    integer dimension(32) :: luncpy
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /ufbcpl/ luncpy
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /usrint/ nval,inv,val
end subroutine ufbcpy
subroutine ufbcup(lubin,lubot) ! in ufbcup.f
    integer :: lubin
    integer :: lubot
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
end subroutine ufbcup
subroutine ufbdmp(lunin,luprt) ! in ufbdmp.f
    integer :: lunin
    integer :: luprt
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end subroutine ufbdmp
subroutine ufbevn(lunit,usr,i1,i2,i3,iret,str) ! in ufbevn.f
    integer,intent(in) :: lunit
    real*8, intent(inout), dimension(i1,i2,i3) :: usr
    integer, intent(in) :: i1,i2,i3
    integer, intent(out) :: iret
    character*(*), intent(in) :: str
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    integer :: iprt
    integer :: maxevn
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /quiet/ iprt
    common /ufbn3c/ maxevn
    common /usrint/ nval,inv,val
end subroutine ufbevn
subroutine ufbget(lunit,tab,i1,iret,str) ! in ufbget.f
    integer :: lunit
    real*8 dimension(i1) :: tab
    integer, optional,check(len(tab)>=i1),depend(tab) :: i1=len(tab)
    integer :: iret
    character*(*) :: str
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    integer dimension(80000) :: nbit
    integer dimension(80000) :: mbit
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /usrbit/ nbit,mbit
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /usrint/ nval,inv,val
end subroutine ufbget
subroutine ufbin3(lunit,usr,i1,i2,i3,iret,jret,str) ! in ufbin3.f
    integer :: lunit
    real*8 dimension(i1,i2,i3) :: usr
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer, optional,check(shape(usr,2)==i3),depend(usr) :: i3=shape(usr,2)
    integer :: iret
    integer :: jret
    character*(*) :: str
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    integer :: iprt
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /quiet/ iprt
    common /usrint/ nval,inv,val
end subroutine ufbin3
subroutine ufbint(lunin,usr,i1,i2,iret,str) ! in ufbint.f
    integer,intent(in) :: lunin
    real*8, intent(inout), dimension(i1,i2) :: usr
    integer, intent(in) :: i1,i2
    integer, intent(out) :: iret
    character*(*), intent(in) :: str
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: iprt
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
    common /quiet/ iprt
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
end subroutine ufbint
subroutine ufbinx(lunit,imsg,isub,usr,i1,i2,iret,str) ! in ufbinx.f
    integer :: lunit
    integer :: imsg
    integer :: isub
    real*8 dimension(i1,i2) :: usr
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer :: iret
    character*(*) :: str
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
end subroutine ufbinx
subroutine ufbmem(lunit,inew,iret,iunit) ! in ufbmem.f
    integer :: lunit
    integer :: inew
    integer :: iret
    integer :: iunit
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    real*8 :: bmiss
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /bufrbmiss/ bmiss
end subroutine ufbmem
subroutine ufbmex(lunit,lundx,inew,iret,mesg) ! in ufbmex.f
    integer :: lunit
    integer :: lundx
    integer :: inew
    integer :: iret
    integer dimension(200000) :: mesg
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    real*8 :: bmiss
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /bufrbmiss/ bmiss
end subroutine ufbmex
subroutine ufbmms(imsg,isub,subset,jdate) ! in ufbmms.f
    integer :: imsg
    integer :: isub
    character*8 :: subset
    integer :: jdate
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
end subroutine ufbmms
subroutine ufbmns(irep,subset,idate) ! in ufbmns.f
    integer :: irep
    character*8 :: subset
    integer :: idate
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    real*8 :: bmiss
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /bufrbmiss/ bmiss
end subroutine ufbmns
subroutine ufbovr(lunit,usr,i1,i2,iret,str) ! in ufbovr.f
    integer :: lunit
    real*8 dimension(i1,i2) :: usr
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer :: iret
    character*(*) :: str
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end subroutine ufbovr
subroutine ufbpos(lunit,irec,isub,subset,jdate) ! in ufbpos.f
    integer :: lunit
    integer :: irec
    integer :: isub
    character*8 :: subset
    integer :: jdate
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
end subroutine ufbpos
subroutine ufbqcd(lunit,nemo,qcd) ! in ufbqcd.f
    integer, intent(in) :: lunit
    character*(*), intent(in) :: nemo
    real, intent(out) :: qcd
end subroutine ufbqcd
subroutine ufbqcp(lunit,qcp,nemo) ! in ufbqcp.f
    integer :: lunit
    real :: qcp
    character*(*) :: nemo
end subroutine ufbqcp
subroutine ufbrep(lunio,usr,i1,i2,iret,str) ! in ufbrep.f
    integer,intent(in) :: lunio
    real*8, intent(inout), dimension(i1,i2) :: usr
    integer, intent(in) :: i1,i2
    integer, intent(out) :: iret
    character*(*),intent(in) :: str
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: iac
    integer :: iprt
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /acmode/ iac
    common /quiet/ iprt
    common /usrint/ nval,inv,val
end subroutine ufbrep
subroutine ufbrms(imsg,isub,usr,i1,i2,iret,str) ! in ufbrms.f
    integer :: imsg
    integer :: isub
    real*8 dimension(i1,i2) :: usr
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer :: iret
    character*(*) :: str
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: iprt
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
end subroutine ufbrms
subroutine ufbrp(lun,usr,i1,i2,io,iret) ! in ufbrp.f
    integer :: lun
    real*8 dimension(i1,i2) :: usr
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer :: io
    integer :: iret
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end subroutine ufbrp
subroutine ufbrw(lun,usr,i1,i2,io,iret) ! in ufbrw.f
    integer :: lun
    real*8 dimension(i1,i2) :: usr
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer :: io
    integer :: iret
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    integer :: iprt
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /quiet/ iprt
    common /usrint/ nval,inv,val
end subroutine ufbrw
subroutine ufbseq(lunin,usr,i1,i2,iret,str) ! in ufbseq.f
    integer, intent(in) :: lunin
    real*8, intent(inout), dimension(i1,i2) :: usr
    integer, intent(in) :: i1,i2
    integer, intent(out) :: iret
    character*(*), intent(in) :: str
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: iprt
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
    common /quiet/ iprt
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end subroutine ufbseq
subroutine ufbsp(lun,usr,i1,i2,io,iret) ! in ufbsp.f
    integer :: lun
    real*8 dimension(i1,i2) :: usr
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer :: io
    integer :: iret
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
end subroutine ufbsp
subroutine ufbstp(lunio,usr,i1,i2,iret,str) ! in ufbstp.f
    integer :: lunio
    real*8 dimension(i1,i2) :: usr
    integer, optional,check(shape(usr,0)==i1),depend(usr) :: i1=shape(usr,0)
    integer, optional,check(shape(usr,1)==i2),depend(usr) :: i2=shape(usr,1)
    integer :: iret
    character*(*) :: str
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: iprt
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
    common /usrint/ nval,inv,val
end subroutine ufbstp
subroutine ufbtab(lunin,tab,i1,i2,iret,str) ! in ufbtab.f
    integer :: lunin
    real*8 dimension(i1,i2) :: tab
    integer, optional,check(shape(tab,0)==i1),depend(tab) :: i1=shape(tab,0)
    integer, optional,check(shape(tab,1)==i2),depend(tab) :: i2=shape(tab,1)
    integer :: iret
    character*(*) :: str
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: iprt
    integer :: iac
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    integer dimension(10) :: ivls
    integer dimension(10) :: kons
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /quiet/ iprt
    common /acmode/ iac
    common /usrstr/ nnod,ncon,nods,nodc,ivls,kons
    common /usrint/ nval,inv,val
end subroutine ufbtab
subroutine ufbtam(tab,i1,i2,iret,str) ! in ufbtam.f
    real*8 dimension(i1,i2) :: tab
    integer, optional,check(shape(tab,0)==i1),depend(tab) :: i1=shape(tab,0)
    integer, optional,check(shape(tab,1)==i2),depend(tab) :: i2=shape(tab,1)
    integer :: iret
    character*(*) :: str
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: nnod
    integer :: ncon
    integer dimension(20) :: nods
    integer dimension(10) :: nodc
    real dimension(10) :: vals
    integer dimension(10) :: kons
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer :: iprt
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    integer :: munit
    integer :: mlast
    integer dimension(200001) :: msgp
    integer dimension(50000000) :: msgs
    integer dimension(90000000) :: mdx
    integer dimension(600) :: ipdxm
    integer :: ldxm
    integer :: ndxm
    integer :: ldxts
    integer :: ndxts
    integer dimension(200) :: ifdxts
    integer dimension(200) :: icdxts
    integer dimension(200) :: ipmsgs
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrstr/ nnod,ncon,nods,nodc,vals,kons
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /quiet/ iprt
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /msgmem/ munit,mlast,msgp,msgs,mdx,ipdxm,ldxm,ndxm,ldxts,ndxts,ifdxts,icdxts,ipmsgs
    common /usrint/ nval,inv,val
end subroutine ufbtam
subroutine ufdump(lunit,luprt) ! in ufdump.f
    integer :: lunit
    integer :: luprt
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    integer :: nnrv
    integer dimension(12) :: inodnrv
    integer dimension(12) :: nrv
    character dimension(12,8),intent(c) :: tagnrv
    integer dimension(12) :: isnrv
    integer dimension(12) :: ienrv
    integer :: ibtnrv
    integer :: ipfnrv
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
    common /nrv203/ nnrv,inodnrv,nrv,tagnrv,isnrv,ienrv,ibtnrv,ipfnrv
    common /usrint/ nval,inv,val
end subroutine ufdump
subroutine upb(nval,nbits,ibay,ibit) ! in upb.f
    integer :: nval
    integer :: nbits
    integer dimension(*) :: ibay
    integer :: ibit
end subroutine upb
subroutine upbb(nval,nbits,ibit,ibay) ! in upbb.f
    integer :: nval
    integer :: nbits
    integer :: ibit
    integer dimension(*) :: ibay
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    common /hrdwrd/ nbytw,nbitw,iord
end subroutine upbb
subroutine upc(chr,nchr,ibay,ibit) ! in upc.f
    character*(*) :: chr
    integer :: nchr
    integer dimension(*) :: ibay
    integer :: ibit
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    integer :: iascii
    integer dimension(256) :: iatoe
    integer dimension(256) :: ietoa
    common /hrdwrd/ nbytw,nbitw,iord
    common /charac/ iascii,iatoe,ietoa
end subroutine upc
subroutine upds3(mbay,lcds3,cds3,nds3) ! in upds3.f
    integer dimension(*) :: mbay
    integer :: lcds3
    character dimension(*,6),intent(c) :: cds3
    integer :: nds3
end subroutine upds3
subroutine upftbv(lunit,nemo,val,mxib,ibit,nib) ! in upftbv.f
    integer,intent(in) :: lunit
    character*(*),intent(in) :: nemo
    real*8, intent(in) :: val
    integer, intent(in) :: mxib
    integer, intent(out) :: ibit(mxib)
    integer, intent(out) :: nib
    real*8 :: bmiss
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine upftbv
function ups(ival,node) ! in ups.f
    integer :: ival
    integer :: node
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: nnrv
    integer dimension(12) :: inodnrv
    integer dimension(12) :: nrv
    character dimension(12,8),intent(c) :: tagnrv
    integer dimension(12) :: isnrv
    integer dimension(12) :: ienrv
    integer :: ibtnrv
    integer :: ipfnrv
    real*8 :: ups
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /nrv203/ nnrv,inodnrv,nrv,tagnrv,isnrv,ienrv,ibtnrv,ipfnrv
end function ups
subroutine uptdd(id,lun,ient,iret) ! in uptdd.f
    integer :: id
    integer :: lun
    integer :: ient
    integer :: iret
    real*8 :: bmiss
    integer :: maxdx
    integer :: idxv
    integer dimension(10) :: nxstr
    integer dimension(10) :: ldxa
    integer dimension(10) :: ldxb
    integer dimension(10) :: ldxd
    integer dimension(10) :: ld30
    character dimension(10,56),intent(c) :: dxstr
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /dxtab/ maxdx,idxv,nxstr,ldxa,ldxb,ldxd,ld30,dxstr
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine uptdd
subroutine usrtpl(lun,invn,nbmp) ! in usrtpl.f
    integer :: lun
    integer :: invn
    integer :: nbmp
    integer dimension(32) :: nmsg
    integer dimension(32) :: nsub
    integer dimension(32) :: msub
    integer dimension(32) :: inode
    integer dimension(32) :: idate
    real*8 :: bmiss
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    integer :: iprt
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    common /msgcwd/ nmsg,nsub,msub,inode,idate
    common /bufrbmiss/ bmiss
    common /usrint/ nval,inv,val
    common /quiet/ iprt
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
end subroutine usrtpl
function valx(str) ! in valx.f
    character*(*) :: str
    real*8 :: bmiss
    integer :: iprt
    real :: valx
    common /bufrbmiss/ bmiss
    common /quiet/ iprt
end function valx
subroutine wrdlen ! in wrdlen.f
    integer :: nbytw
    integer :: nbitw
    integer dimension(8) :: iord
    integer :: iascii
    integer dimension(256) :: iatoe
    integer dimension(256) :: ietoa
    integer :: iprt
    common /hrdwrd/ nbytw,nbitw,iord
    common /charac/ iascii,iatoe,ietoa
    common /quiet/ iprt
end subroutine wrdlen
subroutine wrdxtb(lundx,lunot) ! in wrdxtb.f
    integer :: lundx
    integer :: lunot
    real*8 :: bmiss
    integer :: maxdx
    integer :: idxv
    integer dimension(10) :: nxstr
    integer dimension(10) :: ldxa
    integer dimension(10) :: ldxb
    integer dimension(10) :: ldxd
    integer dimension(10) :: ld30
    character dimension(10,56),intent(c) :: dxstr
    integer dimension(33) :: ntba
    integer dimension(33) :: ntbb
    integer dimension(33) :: ntbd
    integer dimension(150,32) :: mtab
    integer dimension(150,32,2) :: idna
    integer dimension(500,32) :: idnb
    integer dimension(500,32) :: idnd
    character dimension(150,32,128),intent(c) :: taba
    character dimension(500,32,128),intent(c) :: tabb
    character dimension(500,32,600),intent(c) :: tabd
    common /bufrbmiss/ bmiss
    common /dxtab/ maxdx,idxv,nxstr,ldxa,ldxb,ldxd,ld30,dxstr
    common /tababd/ ntba,ntbb,ntbd,mtab,idna,idnb,idnd,taba,tabb,tabd
end subroutine wrdxtb
subroutine writcp(lunit) ! in writcp.f
    integer :: lunit
end subroutine writcp
subroutine writdx(lunit,lun,lundx) ! in writdx.f
    integer :: lunit
    integer :: lun
    integer :: lundx
end subroutine writdx
subroutine writsa(lunxx,lmsgt,msgt,msgl) ! in writsa.f
    integer :: lunxx
    integer :: lmsgt
    integer dimension(*) :: msgt
    integer :: msgl
    integer :: msglen
    integer dimension(150000) :: msgtxt
    real*8 :: bmiss
    character*1 :: ccmf
    common /bufrmg/ msglen,msgtxt
    common /bufrbmiss/ bmiss
    common /msgcmp/ ccmf
end subroutine writsa
subroutine writsb(lunit) ! in writsb.f
    integer :: lunit
    character*1 :: ccmf
    common /msgcmp/ ccmf
end subroutine writsb
subroutine wrtree(lun) ! in wrtree.f
    integer :: lun
    integer dimension(32) :: luncpy
    integer :: maxtab
    integer :: ntab
    character dimension(96000,10),intent(c) :: tag
    character dimension(96000,3),intent(c) :: typ
    integer dimension(96000) :: knt
    integer dimension(96000) :: jump
    integer dimension(96000) :: link
    integer dimension(96000) :: jmpb
    integer dimension(96000) :: ibt
    integer dimension(96000) :: irf
    integer dimension(96000) :: isc
    integer dimension(96000) :: itp
    real dimension(96000) :: vali
    integer dimension(96000) :: knti
    integer dimension(96000,2) :: iseq
    integer dimension(96000) :: jseq
    real*8 :: bmiss
    integer :: maxbyt
    integer :: ibit
    integer dimension(150000) :: ibay
    integer dimension(32) :: mbyt
    integer dimension(150000,32) :: mbay
    integer dimension(32) :: nval
    integer dimension(80000,32) :: inv
    real*8 dimension(80000,32) :: val
    common /ufbcpl/ luncpy
    common /tables/ maxtab,ntab,tag,typ,knt,jump,link,jmpb,ibt,irf,isc,itp,vali,knti,iseq,jseq
    common /bufrbmiss/ bmiss
    common /bitbuf/ maxbyt,ibit,ibay,mbyt,mbay
    common /usrint/ nval,inv,val
end subroutine wrtree
subroutine wtstat(lunit,lun,il,im) ! in wtstat.f
    integer :: lunit
    integer :: lun
    integer :: il
    integer :: im
    real*8 :: bmiss
    integer dimension(32) :: iolun
    integer dimension(32) :: iomsg
    common /bufrbmiss/ bmiss
    common /stbfr/ iolun,iomsg
end subroutine wtstat
subroutine fortran_open(filename, lunit, format, position, iret)
      character*(*), intent(in) :: filename, format, position
      integer,intent(in) :: lunit
      integer,intent(out) :: iret
end subroutine fortran_open
subroutine fortran_close(lunit,iret)
      integer,intent(in) :: lunit
      integer,intent(out) :: iret
end subroutine fortran_close

    end interface 
end python module _bufrlib

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
